# This file was autogenerated by pylox
# on June 11, 2022 18:13:13
from pylox.scanner import LoxToken as Token

class Expr:
	pass

	def accept(self, visitor: 'ExprVisitor'):
		raise NotImplementedError('Subclasses should implement this method')

class Binary(Expr):

	def __init__(self, left: Expr, operator: Token, right: Expr):
		self.left = left
		self.operator = operator
		self.right = right

	def accept(self, visitor: 'ExprVisitor'):
		return visitor.visitBinaryExpr(self)


class Unary(Expr):

	def __init__(self, operator: Token, right: Expr):
		self.operator = operator
		self.right = right

	def accept(self, visitor: 'ExprVisitor'):
		return visitor.visitUnaryExpr(self)


class Literal(Expr):

	def __init__(self, value: object):
		self.value = value

	def accept(self, visitor: 'ExprVisitor'):
		return visitor.visitLiteralExpr(self)


class Grouping(Expr):

	def __init__(self, expression: Expr):
		self.expression = expression

	def accept(self, visitor: 'ExprVisitor'):
		return visitor.visitGroupingExpr(self)


